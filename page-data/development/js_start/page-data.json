{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/js_start/","result":{"data":{"site":{"siteMetadata":{"title":"Another day","author":"[geniein]","siteUrl":"https://geniein.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"ebe8160a-3440-53b1-91a9-0f45b3148d7d","excerpt":"자바스크립트를 공부하면서 항상 의문이였던 부분들과 잘 이해하지 못 하던 부분들을 반복적으로 똑같은 주제를 찾기보단 나의 글로 정리해보려고 한다. 기본적인 문법 설명보다는 자바스크립트가 어떤 흐름으로 동작하는지와 수십번을 보아도 잘 이해가 안되던 execution context, this, closure의 개념에 대해서 나만의 방식으로 정리하는 글이다. 내가 생각하는 목차는 다음과 같다. 데이터 타입(Data type)과 메모리 실행 컨텍스트(Execution Context) 호출스택(Call…","html":"<p>자바스크립트를 공부하면서 항상 의문이였던 부분들과 잘 이해하지 못 하던 부분들을 반복적으로 똑같은 주제를 찾기보단 나의 글로 정리해보려고 한다.<br>\n기본적인 문법 설명보다는 자바스크립트가 어떤 흐름으로 동작하는지와 수십번을 보아도 잘 이해가 안되던 execution context, this, closure의 개념에 대해서 나만의 방식으로 정리하는 글이다.</p>\n<p>내가 생각하는 목차는 다음과 같다.</p>\n<ul>\n<li>데이터 타입(Data type)과 메모리</li>\n<li>실행 컨텍스트(Execution Context)</li>\n<li>호출스택(Call Stack)과 이벤트 루프(Event Loop)</li>\n<li>this</li>\n<li>콜백함수(Callback Function)</li>\n<li>클로저(Closure)</li>\n<li>프로토타입(Prototype)</li>\n<li>클래스(Class)</li>\n</ul>\n<p>먼저 데이터의 종류들과 그 데이터들이 어떻게 메모리에 쓰여지고 지워지는지에 대한 설명을 시작으로, 다음에는 자바스크립트 소스코드들이 어떻게 연관되어지고 읽어지는지에 대한 실행 컨텍스트, 그 다음으로 실행 컨텍스트들이 어떤 순서로 동작을 하는지에 대한 설명으로 호출스택과 이벤트 루프를 설명한다.</p>\n<p>이후, 자바스크립트에서 중요한 개념인 this, 콜백함수, 클로저, 프로토타입, 클래스 들을 설명하고자 한다.</p>","frontmatter":{"title":"Javascript의 핵심과 흐름","date":"March 29, 2022"}}},"pageContext":{"slug":"/development/js_start/","previous":{"fields":{"slug":"/development/quick_start/"},"frontmatter":{"title":"Quick Start"}},"next":{"fields":{"slug":"/development/js_datatype_memory/"},"frontmatter":{"title":"Javascript의 데이터 타입과 메모리"}}}},"staticQueryHashes":["2486386679","3128451518"]}